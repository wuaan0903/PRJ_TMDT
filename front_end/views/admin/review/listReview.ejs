<%- layout('../layouts/index') %>

<style>
    :root {
        --blue: #3C91E6;
    }

    tbody {
        font-weight: 500;
    }

    .modall {
        position: fixed;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        visibility: hidden;
        pointer-events: none;
        z-index: 1000;
        display: flex;
        justify-content: center;
        align-items: center;

    }

    .modall.active {

        visibility: visible;
        pointer-events: auto;
    }


    .overlay {
        transition: 0.4s;
        position: fixed;
        height: 100%;
        width: 100%;
        background: linear-gradient(269deg, #000000a1, #ffffff00);
        opacity: 0;
        pointer-events: none;
    }

    .modall.active .overlay {
        opacity: 1;
        pointer-events: auto;
    }

    .modal-box {
        position: fixed;
        left: 58%;
        top: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: none;
    width: 70%;
    max-height: 575px;
    overflow: auto;
    padding: 30px 20px;
    border-radius: 24px;
    background-color: #fff;
    opacity: 0;
    pointer-events: none;
    transition: all 0.4s ease;
    transform: translate(-50%, -50%) scale(0.8);
    }

    .modall.active .modal-box {
        opacity: 1;
    pointer-events: auto;
    top: 350px;
    }


    #content main .table-data .head h3.active a {
        color: #000;
    }

    .container {
        padding: 0;
        margin-top: 0;
        max-width: 100%;
    }

    .containerr .shopping-cart {
        padding: 0;
    }

    .containerr .shopping-cart table tr td {

        font-size: 18px;
        font-weight: 600;
        letter-spacing: -1px;
    }

    .containerr .shopping-cart table thead th {
        font-size: 18px;
        letter-spacing: -1px;
        white-space: nowrap;
    }

    .table-body {
        max-height: 313px;
        overflow: auto;
    }

    /* width */
    ::-webkit-scrollbar {
        width: 5px;
        height: 10px;
        transform: translateX(-10px);
    }

    /* Track */
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: rgb(182, 182, 182);
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
        background: rgb(112, 112, 112);
    }
     .loader {
        display: flex;
        justify-content: center;
        align-items: center;
         margin-top: 20px;
      }
    .loader i {
         font-size: 3em;
    }

     .status-dropdown {
        position: relative;
        display: inline-block;
    }

    .status-dropdown .status-btn {
        cursor: pointer;
        padding: 8px 12px;
        border-radius: 4px;
        display: inline-block;
        white-space: nowrap;
        position: relative; /* Add position relative to the button */
    }

    .status-dropdown .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        left: 0;
        top: 100%;
        border-radius: 4px;
        padding: 5px 0;
        white-space: nowrap;
    }

    .status-dropdown .dropdown-content a {
        color: black;
        padding: 8px 12px;
        text-decoration: none;
        display: block;
    }

    .status-dropdown .dropdown-content a:hover {
         background-color: #f1f1f1;
    }

    .status-dropdown.active .dropdown-content {
        display: block;
    }
    input:focus, textarea:focus, select:focus {
        outline: none !important;
        box-shadow: none !important;
        border-color: inherit; /* Giữ nguyên border cũ */
    }
</style>
<main>
    <div class="view-panell">

        <div class="d-flex justify-content-between align-items-center mb-4">
            <!-- Tìm kiếm đơn hàng -->
            <div class="input-group" style="width: 40%;">
                <span class="input-group-text" style="border-radius: 24px 0 0 24px; background: white; border-right: none;">
                    <i class='bx bx-search-alt-2'></i>
                </span>
                <input type="text" id="searchOrderInput" class="form-control" placeholder="Tìm kiếm theo mã đơn hàng hoặc tên khách hàng" style="
                    font-size: 16px;
                    font-weight: 600;
                    letter-spacing: -1px;
                    border-radius: 0 24px 24px 0;
                    line-height: 2;
                    border-left: none;
                    outline: none;
                    box-shadow: none;
                ">
            </div>
            <div class="row" style="width: 500px;">
                <div class="col-md-4" style="
                padding-right: 5px;
            ">
                    <select class="form-select" id="ratingFilter" style="
                    border-radius: 30px;
                    font-size: 14px;
                    font-weight: 600;
                        padding: 12px;
                ">
                        <option selected>Đánh giá</option>
                        <option value="1">1 sao</option>
                        <option value="2">2 sao</option>
                        <option value="3">3 sao</option>
                        <option value="4">4 sao</option>
                        <option value="5">5 sao</option>
                    </select>
                </div>
                <div class="col-md-4" style="
                padding-right: 5px;
            ">
                    <select class="form-select" id="imageFilter" style="
                    border-radius: 30px;
                    font-size: 14px;
                    font-weight: 600;
                        padding: 12px;
                ">
                        <option selected>Ảnh</option>
                        <option value="có ảnh">Có ảnh</option>
                        <option value="không ảnh">Không ảnh</option>
                    </select>
                </div>
                <div class="col-md-4" style="
                padding: 0;
            ">
                    <select class="form-select" id="replyFilter" style="
                    border-radius: 30px;
                    font-size: 14px;
                    font-weight: 600;
                        padding: 12px;
                ">
                        <option selected>Phản hồi</option>
                        <option value="có phản hồi">Có phản hồi</option>
                        <option value="không phản hồi">Không phản hồi</option>
                    </select>
                </div>
            </div>

            

        </div>
        <div id="review-container">
            
        </div>
    </div>
</main>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const reviewContainer = document.getElementById('review-container');

        try {
            // Gọi API để lấy danh sách review
            const response = await fetch('/api/reviews');
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const reviews = await response.json();

            // Kiểm tra nếu không có review
            if (!reviews || reviews.length === 0) {
                reviewContainer.innerHTML = '<p>Không có đánh giá nào.</p>';
                return;
            }

            // Hiển thị danh sách review
            const reviewHtml = reviews.map((review) => {
                const username = review.user.username || 'Người dùng ẩn danh'; // Sử dụng user_id nếu không có user
                const imagesHtml = review.image_review && review.image_review.length > 0
                    ? review.image_review.map(image => `
                        <img src="http://localhost:3002/api/reviewProduct/imageReview/${image}" 
                             alt="Review Image" class="img-fluid" style="max-width: 100px; margin-right: 5px;">
                    `).join('')
                    : '';

                const replyHtml = review.reply_review && review.reply_review.trim() !== ''
                    ? `
                        <div class="list-group-item pt-4 pb-3 px-4 border-top" style="background: #e9ecef;">
                            <div class="d-flex justify-content-between">
                                <h5 class="fw-bold" style="font-size: 14px;">Phản hồi từ 79sportswear</h5>
                                <h5 class="text-secondary" style="font-size: 13px; font-weight:600;">${new Date(review.updatedAt).toLocaleDateString()}</h5>
                            </div>
                            <p class="mt-3 mb-3" style="font-size: 13px; font-weight:600;">${review.reply_review}</p>
                            
                            <button class="btn btn-warning btn-sm edit-reply-btn" data-review-id="${review._id}" style="font-size: 13px; font-weight:600;">Sửa</button>
                        <div class="reply-input-container" id="reply-container-${review._id}" style="display: none; margin-top: 10px;">
                            <textarea class="form-control reply-input" id="reply-input-${review._id}" rows="2" placeholder="Nhập phản hồi..." style="font-size: 13px;">${review.reply_review}</textarea>
                            <button class="btn btn-success btn-sm mt-2 send-reply-btn" data-review-id="${review._id}" style="font-size: 13px;">Cập nhật</button>
                        </div>
                        </div>
                    `
                    : `
                        <button class="btn btn-primary btn-sm reply-btn" data-review-id="${review._id}" style="font-size: 13px; font-weight:600;">Phản hồi</button>
                        <div class="reply-input-container" id="reply-container-${review._id}" style="display: none; margin-top: 10px;">
                            <textarea class="form-control reply-input" id="reply-input-${review._id}" rows="2" placeholder="Nhập phản hồi..." style="font-size: 13px;"></textarea>
                            <button class="btn btn-success btn-sm mt-2 send-reply-btn" data-review-id="${review._id}" style="font-size: 13px;">Gửi</button>
                        </div>
                    `;

                return `
                    <div class="list-group-item pt-4 pb-3 border-top">
                        <div class="fs-4">
                            ${'★'.repeat(review.rate)}${'☆'.repeat(5 - review.rate)}
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5 class="fw-bold" style="font-size: 14px;">${username}</h5>
                            <h5 class="text-secondary" style="font-size: 13px; font-weight:600;">${new Date(review.createdAt).toLocaleDateString()}</h5>
                        </div>
                        <p class="mt-3 mb-3" style="font-size: 13px; font-weight:600;">${review.comment}</p>
                        <div>${imagesHtml}</div>
                        ${replyHtml}
                    </div>
                `;
            }).join('');

            reviewContainer.innerHTML = `
                <div class="list-group">
                    ${reviewHtml}
                </div>
            `;

            // Thêm sự kiện cho nút "Phản hồi"
            document.querySelectorAll('.reply-btn').forEach(button => {
                button.addEventListener('click', (e) => {
                    const reviewId = e.target.getAttribute('data-review-id');
                    const replyContainer = document.getElementById(`reply-container-${reviewId}`);
                    replyContainer.style.display = 'block'; // Hiển thị input phản hồi
                });
            });

            // Thêm sự kiện cho nút "Sửa"
            document.querySelectorAll('.edit-reply-btn').forEach(button => {
                button.addEventListener('click', (e) => {
                    const reviewId = e.target.getAttribute('data-review-id');
                    const replyContainer = document.getElementById(`reply-container-${reviewId}`);
                    replyContainer.style.display = 'block'; // Hiển thị input chỉnh sửa phản hồi
                });
            });

            // Thêm sự kiện cho nút "Gửi" hoặc "Cập nhật"
            document.querySelectorAll('.send-reply-btn').forEach(button => {
                button.addEventListener('click', async (e) => {
                    const reviewId = e.target.getAttribute('data-review-id');
                    const replyInput = document.getElementById(`reply-input-${reviewId}`);
                    const replyText = replyInput.value.trim();

                    if (!replyText) {
                        alert('Vui lòng nhập nội dung phản hồi.');
                        return;
                    }

                    try {
                        const response = await fetch(`/api/review/reply/${reviewId}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ reply_review: replyText }),
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        alert('Phản hồi đã được cập nhật thành công!');
                        location.reload(); // Tải lại trang để cập nhật danh sách review
                    } catch (error) {
                        console.error('Error updating reply:', error);
                        alert('Không thể cập nhật phản hồi. Vui lòng thử lại sau.');
                    }
                });
            });
        } catch (error) {
            console.error('Error fetching reviews:', error);
            reviewContainer.innerHTML = '<p>Không thể tải danh sách đánh giá. Vui lòng thử lại sau.</p>';
        }
    });

    document.addEventListener('DOMContentLoaded', async () => {
        const reviewContainer = document.getElementById('review-container');
        const ratingFilter = document.getElementById('ratingFilter');
        const imageFilter = document.getElementById('imageFilter');
        const replyFilter = document.getElementById('replyFilter');
    
        async function fetchReviews() {
            try {
                const response = await fetch('/api/reviews');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return await response.json();
            } catch (error) {
                console.error('Error fetching reviews:', error);
                reviewContainer.innerHTML = '<p>Không thể tải danh sách đánh giá. Vui lòng thử lại sau.</p>';
                return [];
            }
        }
    
        function filterReviews(reviews) {
            const selectedRating = ratingFilter.value;
            const selectedImage = imageFilter.value;
            const selectedReply = replyFilter.value;
            
    
            return reviews.filter(review => {
                const ratingMatch = selectedRating === 'Đánh giá' || review.rate === Number(selectedRating);
                const imageMatch = selectedImage === 'Ảnh' || (selectedImage === 'có ảnh' && review.image_review.length > 0) || (selectedImage === 'không ảnh' && review.image_review.length === 0);
                const replyMatch = selectedReply === 'Phản hồi' || (selectedReply === 'có phản hồi' && review.reply_review) || (selectedReply === 'không phản hồi' && !review.reply_review);
                return ratingMatch && imageMatch && replyMatch;
            });
        }
    
        async function displayReviews() {
            const selectedRating = ratingFilter.value;
            const selectedImage = imageFilter.value;
            const selectedReply = replyFilter.value;
            const review = await fetchReviews();
            const filteredReviews = filterReviews(review);
            const reviews = filteredReviews;
    
            if (filteredReviews.length === 0) {
                reviewContainer.innerHTML = '<p>Không có đánh giá nào phù hợp.</p>';
                return;
            }
    
            // Hiển thị danh sách review
            const reviewHtml = reviews.map((review) => {
                const username = review.user.username || 'Người dùng ẩn danh'; // Sử dụng user_id nếu không có user
                const imagesHtml = review.image_review && review.image_review.length > 0
                    ? review.image_review.map(image => `
                        <img src="http://localhost:3002/api/reviewProduct/imageReview/${image}" 
                             alt="Review Image" class="img-fluid" style="max-width: 100px; margin-right: 5px;">
                    `).join('')
                    : '';

                const replyHtml = review.reply_review && review.reply_review.trim() !== ''
                    ? `
                        <div class="list-group-item pt-4 pb-3 px-4 border-top" style="background: #e9ecef;">
                            <div class="d-flex justify-content-between">
                                <h5 class="fw-bold" style="font-size: 14px;">Phản hồi từ 79sportswear</h5>
                                <h5 class="text-secondary" style="font-size: 13px; font-weight:600;">${new Date(review.updatedAt).toLocaleDateString()}</h5>
                            </div>
                            <p class="mt-3 mb-3" style="font-size: 13px; font-weight:600;">${review.reply_review}</p>
                            
                            <button class="btn btn-warning btn-sm edit-reply-btn" data-review-id="${review._id}" style="font-size: 13px; font-weight:600;">Sửa</button>
                        <div class="reply-input-container" id="reply-container-${review._id}" style="display: none; margin-top: 10px;">
                            <textarea class="form-control reply-input" id="reply-input-${review._id}" rows="2" placeholder="Nhập phản hồi..." style="font-size: 13px;">${review.reply_review}</textarea>
                            <button class="btn btn-success btn-sm mt-2 send-reply-btn" data-review-id="${review._id}" style="font-size: 13px;">Cập nhật</button>
                        </div>
                        </div>
                    `
                    : `
                        <button class="btn btn-primary btn-sm reply-btn" data-review-id="${review._id}" style="font-size: 13px; font-weight:600;">Phản hồi</button>
                        <div class="reply-input-container" id="reply-container-${review._id}" style="display: none; margin-top: 10px;">
                            <textarea class="form-control reply-input" id="reply-input-${review._id}" rows="2" placeholder="Nhập phản hồi..." style="font-size: 13px;"></textarea>
                            <button class="btn btn-success btn-sm mt-2 send-reply-btn" data-review-id="${review._id}" style="font-size: 13px;">Gửi</button>
                        </div>
                    `;

                return `
                    <div class="list-group-item pt-4 pb-3 border-top">
                        <div class="fs-4">
                            ${'★'.repeat(review.rate)}${'☆'.repeat(5 - review.rate)}
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5 class="fw-bold" style="font-size: 14px;">${username}</h5>
                            <h5 class="text-secondary" style="font-size: 13px; font-weight:600;">${new Date(review.createdAt).toLocaleDateString()}</h5>
                        </div>
                        <p class="mt-3 mb-3" style="font-size: 13px; font-weight:600;">${review.comment}</p>
                        <div>${imagesHtml}</div>
                        ${replyHtml}
                    </div>
                `;
            }).join('');

            reviewContainer.innerHTML = `
                <div class="list-group">
                    ${reviewHtml}
                </div>
            `;
        }
    
        ratingFilter.addEventListener('change', displayReviews);
        imageFilter.addEventListener('change', displayReviews);
        replyFilter.addEventListener('change', displayReviews);
    
        displayReviews();
    });
    
    
</script>