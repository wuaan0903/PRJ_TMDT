<%- layout('../layouts/index') %>
<main id="view-panel">
    <div class="bg-white border rounded-4">
        <div>
            <div class="p-3 border-bottom d-flex justify-content-between">
                <h3 class="m-0 d-flex align-items-center fs-4">Quản lý tài khoản</h3>
                <button id="showAddAccountModalBtn" class="btn btn-success m-2" style="white-space: nowrap;">Thêm mới</button>
            </div>
        </div>
        <div class="table-data">
            <div class="order">
                <h4>Danh sách người dùng</h4>
                <table class="myTable">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên tài khoản</th>
                            <th>Email</th>
                            <th>Vai trò</th>
                            <th>Chi tiết</th>
                            <th>Xóa</th>
                        </tr>
                    </thead>
                    <tbody class="tbody active" id="userTableBody">
                        <!-- Dữ liệu người dùng sẽ được tải ở đây -->
                    </tbody>
                </table>
            </div>
            <div class="order">
                <h4>Danh sách nhân viên</h4>
                <table class="myTable">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên tài khoản</th>
                            <th>Email</th>
                            <th>Vai trò</th>
                            <th>Chi tiết</th>
                            <th>Xóa</th>
                        </tr>
                    </thead>
                    <tbody class="tbody active" id="staffTableBody">
                        <!-- Dữ liệu nhân viên sẽ được tải ở đây -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</main>

<!-- Modal Thêm Tài Khoản -->
<div class="modal fade" id="addAccountModal" tabindex="-1" aria-labelledby="addAccountModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addAccountModalLabel">Thêm tài khoản mới</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addAccountForm">
          <div class="mb-3">
            <label for="accountName" class="form-label">Tên tài khoản</label>
            <input type="text" class="form-control" id="accountName" name="accountName" required>
          </div>
          <div class="mb-3">
            <label for="accountEmail" class="form-label">Email</label>
            <input type="email" class="form-control" id="accountEmail" name="accountEmail" required>
          </div>
          <div class="mb-3">
            <label for="accountPassword" class="form-label">Mật khẩu</label>
            <input type="password" class="form-control" id="accountPassword" name="accountPassword" required>
          </div>
          <div class="mb-3">
            <label for="accountPhoneNumber" class="form-label">Số điện thoại</label>
            <input type="text" class="form-control" id="accountPhoneNumber" name="accountPhoneNumber" required>
          </div>
          <div class="mb-3">
            <label for="accountRole" class="form-label">Vai trò</label>
            <select class="form-control" id="accountRole" name="accountRole" required>
              <option value="user">Người dùng</option>
              <option value="staff">Nhân viên</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Thêm mới</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal Chi Tiết Tài Khoản -->
<div class="modal fade" id="detailAccountModal" tabindex="-1" aria-labelledby="detailAccountModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="detailAccountModalLabel">Chi tiết tài khoản</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="detailAccountForm">
          <div class="mb-3">
            <label for="detailAccountName" class="form-label">Tên tài khoản</label>
            <input type="text" class="form-control" id="detailAccountName" name="detailAccountName" required>
          </div>
          <div class="mb-3">
            <label for="detailAccountEmail" class="form-label">Email</label>
            <input type="email" class="form-control" id="detailAccountEmail" name="detailAccountEmail" required>
          </div>
          <div class="mb-3">
            <label for="detailAccountPhoneNumber" class="form-label">Số điện thoại</label>
            <input type="text" class="form-control" id="detailAccountPhoneNumber" name="detailAccountPhoneNumber" required>
          </div>
          <div class="mb-3">
            <label for="detailAccountRole" class="form-label">Vai trò</label>
            <select class="form-control" id="detailAccountRole" name="detailAccountRole" required>
              <option value="user">Người dùng</option>
              <option value="staff">Nhân viên</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Cập nhật</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap Bundle (bao gồm Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        fetchUsers();
        fetchStaff();
        document.getElementById('showAddAccountModalBtn').addEventListener('click', () => {
            const addAccountModal = new bootstrap.Modal(document.getElementById('addAccountModal'));
            addAccountModal.show();
        });
        document.getElementById('addAccountForm').addEventListener('submit', addAccount);
        document.getElementById('detailAccountForm').addEventListener('submit', updateAccount);
    });

    async function fetchUsers() {
        try {
            const response = await fetch('/api/account/role/user');
            if (!response.ok) {
                throw new Error(`Lỗi HTTP! Trạng thái: ${response.status}`);
            }
            const users = await response.json();
            updateTable(users, 'userTableBody');
        } catch (error) {
            console.error('Không thể tải danh sách người dùng:', error);
            alert('Không thể tải danh sách người dùng.');
        }
    }

    async function fetchStaff() {
        try {
            const response = await fetch('/api/account/role/staff');
            if (!response.ok) {
                throw new Error(`Lỗi HTTP! Trạng thái: ${response.status}`);
            }
            const staff = await response.json();
            updateTable(staff, 'staffTableBody');
        } catch (error) {
            console.error('Không thể tải danh sách nhân viên:', error);
            alert('Không thể tải danh sách nhân viên.');
        }
    }

    function updateTable(accounts, tableBodyId) {
        const tableBody = document.getElementById(tableBodyId);
        tableBody.innerHTML = ''; // Xóa các hàng hiện có
        accounts.forEach((account, index) => {
            const row = document.createElement('tr');
            row.setAttribute('data-account-id', account._id);

            row.innerHTML = `
                <td>
                    <span>${index + 1}</span>
                </td>
                <td style="width: 30%;">
                    ${account.username}
                </td>
                <td>
                    ${account.email}
                </td>
                <td>
                    ${account.role}
                </td>
                <td>
                    <button type="button" class="btn btn-primary" onclick="showDetailModal('${account._id}')">Chi tiết</button>
                </td>
                <td>
                    <button type="button" class="btn btn-danger" id="deleteButton" onclick="confirmDelete('${account._id}')">Xóa</button>
                </td>
            `;
            tableBody.appendChild(row);
        });
    }

    function confirmDelete(accountId) {
        if (confirm("Bạn có chắc chắn muốn xóa tài khoản này không?")) {
            fetch(`/api/account/${accountId}`, {
                method: 'DELETE',
            })
            .then(response => {
                if (response.ok) {
                    // Xóa hàng khỏi bảng
                    const rowToDelete = document.querySelector(`[data-account-id="${accountId}"]`);
                    if (rowToDelete) {
                        rowToDelete.remove();
                    }
                    alert('Xóa tài khoản thành công.');
                } else {
                    alert('Xóa tài khoản thất bại.');
                }
            })
            .catch(error => {
                console.error('Lỗi khi xóa:', error);
                alert('Đã xảy ra lỗi khi xóa.');
            });
        }
    }

    async function addAccount(event) {
        event.preventDefault();
        const accountName = document.getElementById('accountName').value.trim();
        const accountEmail = document.getElementById('accountEmail').value.trim();
        const accountPassword = document.getElementById('accountPassword').value.trim();
        const accountPhoneNumber = document.getElementById('accountPhoneNumber').value.trim();
        const accountRole = document.getElementById('accountRole').value;

        if (!accountName || !accountEmail || !accountPassword || !accountPhoneNumber) {
            alert('Vui lòng nhập đầy đủ thông tin tài khoản.');
            return;
        }
        try {
            const response = await fetch('/api/account', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username: accountName, email: accountEmail, password: accountPassword, phone_number: accountPhoneNumber, role: accountRole }),
            });
            if (response.ok) {
                fetchUsers();
                fetchStaff();
                document.getElementById('addAccountForm').reset();
                const addAccountModal = bootstrap.Modal.getInstance(document.getElementById('addAccountModal'));
                addAccountModal.hide();
                alert('Thêm tài khoản thành công.');
            } else {
                alert('Thêm tài khoản thất bại.');
            }
        } catch (error) {
            console.error('Lỗi khi thêm tài khoản:', error);
            alert('Đã xảy ra lỗi khi thêm tài khoản.');
        }
    }

    async function showDetailModal(accountId) {
        try {
            const response = await fetch(`/api/account/${accountId}`);
            if (!response.ok) {
                throw new Error(`Lỗi HTTP! Trạng thái: ${response.status}`);
            }
            const account = await response.json();
            document.getElementById('detailAccountName').value = account.username;
            document.getElementById('detailAccountEmail').value = account.email;
            document.getElementById('detailAccountPhoneNumber').value = account.phone_number;
            document.getElementById('detailAccountRole').value = account.role;
            document.getElementById('detailAccountForm').setAttribute('data-account-id', account._id);

            const detailAccountModal = new bootstrap.Modal(document.getElementById('detailAccountModal'));
            detailAccountModal.show();
        } catch (error) {
            console.error('Không thể tải thông tin tài khoản:', error);
            alert('Không thể tải thông tin tài khoản.');
        }
    }

    async function updateAccount(event) {
        event.preventDefault();
        const accountId = document.getElementById('detailAccountForm').getAttribute('data-account-id');
        const accountName = document.getElementById('detailAccountName').value.trim();
        const accountEmail = document.getElementById('detailAccountEmail').value.trim();
        const accountPhoneNumber = document.getElementById('detailAccountPhoneNumber').value.trim();
        const accountRole = document.getElementById('detailAccountRole').value;

        if (!accountName || !accountEmail || !accountPhoneNumber) {
            alert('Vui lòng nhập đầy đủ thông tin tài khoản.');
            return;
        }
        try {
            const response = await fetch(`/api/account/${accountId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username: accountName, email: accountEmail, phone_number: accountPhoneNumber, role: accountRole }),
            });
            if (response.ok) {
                fetchUsers();
                fetchStaff();
                const detailAccountModal = bootstrap.Modal.getInstance(document.getElementById('detailAccountModal'));
                detailAccountModal.hide();
                alert('Cập nhật tài khoản thành công.');
            } else {
                alert('Cập nhật tài khoản thất bại.');
            }
        } catch (error) {
            console.error('Lỗi khi cập nhật tài khoản:', error);
            alert('Đã xảy ra lỗi khi cập nhật tài khoản.');
        }
    }
</script>